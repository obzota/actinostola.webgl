var explorer = angular.module('actinostola.explorer', [
	'actinostola.webgl',
	'actinostola.data']);

explorer.controller('explorer.canvactrl', ['$scope', 'explorer.canvas', 'explorer.scene', 'explorer.eventbuffer', 'explorer.tree',
	function($scope, canvas, scene, buffer, tree) {

	$scope.mouseMove = function (event) {
		buffer.x = event.clientX;
		buffer.y = event.clientY;
	};

	$scope.mouseDown = function (event) {
		if (event.button != 0) return;
		buffer.down = true;
		buffer.x0 = event.clientX;
		buffer.x = event.clientX;
		buffer.y0 = event.clientY;
		buffer.y = event.clientY;
	};

	$scope.mouseUp = function (event) {
		buffer.down = false;
	};

	/* Zoom/Unzoom
		generated by scrolling on the wheel */

	$scope.mouseScroll = function (event) {
		buffer.dscroll += event.wheelDelta;
	};

	$scope.registerEvents = function () {
		canvas.onscroll = $scope.mouseScroll;
		canvas.onmousedown = $scope.mouseDown;
		document.onmouseup = $scope.mouseUp;
		document.onmousemove = $scope.mouseMove;
		canvas.onwheel = $scope.mouseScroll;
		window.onresize = $scope.resize;
	};

	$scope.resize = function () {
		scene.resize();
	};

	$scope.animloop = function () {
		requestAnimFrame($scope.animloop);
		scene.handleEvents(buffer);
	  	scene.render();
	};

	scene.resize();
	$scope.animloop();

	$scope.registerEvents();

}]);

explorer.factory('explorer.eventbuffer', function () {
	return {
		x: 0,
		y: 0,
		x0: 0,
		y0: 0,
		down: false,
		dscroll: 0
	};
});

explorer.value('explorer.canvasid', 'glcanvas');
explorer.factory('explorer.canvas', ['explorer.canvasid', function canvaFactory (id){
	return document.getElementById(id);
}]);

explorer.factory('explorer.scene', ['webgl.scene', 'explorer.canvasid', function (Scene, id) {
	var scene = new Scene(id);
	return scene;
}]);

explorer.controller('explorer.mainctrl', ['$scope', 'explorer.scene', 'explorer.tree', function($scope, scene, tree) {

	/* * * * * * * * * * * * * * * * * * * */
	/*              Show UIs               */
	/* * * * * * * * * * * * * * * * * * * */

	$scope.showDisplay = true;
	$scope.showFiles = false;
	$scope.showFolders = false;
	$scope.showInfo = false;

	$scope.hideAll = function () {
		$scope.showDisplay = false;
		$scope.showFiles = false;
		$scope.showFolders = false;
		$scope.showInfo = false;
	};

	$scope.toggleDisplay = function () {
		var tmp = $scope.showDisplay;
		$scope.hideAll();
		$scope.showDisplay = !tmp;
	};

	$scope.toggleFiles = function () {
		var tmp = $scope.showFiles;
		$scope.hideAll();
		$scope.showFiles = !tmp;
	};

	$scope.toggleFolders = function () {
		var tmp = $scope.showFolders;
		$scope.hideAll();
		$scope.showFolders = !tmp;
	};

	$scope.toggleInfo = function () {
		$scope.hideAll();
		$scope.showInfo = true;
	}

	/* * * * * * * * * * * * * * * * * * * */
	/*                                     */
	/* * * * * * * * * * * * * * * * * * * */

	$scope.incr = function () {
		scene.enable.depth++;
	};

	$scope.decr = function () {
		scene.enable.depth--;
	};

	$scope.enable = scene.enable;

	/* * * * * * * * * * * * * * * * * * * */
	/*                                     */
	/* * * * * * * * * * * * * * * * * * * */

	$scope.root = tree.root;
	$scope.fileselected = null;

	$scope.setFocus = function (node) {
		if (!node) return;
		if ($scope.focus) $scope.focus.cloud.focus = false;
		$scope.focus = node;
		$scope.focus.cloud.focus = true;
		tree.focus = node;

		scene.camera.setFocus(node.cloud.center);
	};

	$scope.backToRoot = function () {
		$scope.setFocus($scope.root);
	};

	$scope.backToRoot();

	$scope.selectfile = function (file) {
		$scope.showinfo = true;
		$scope.file = file;
	};

}]);

explorer.factory('explorer.tree', ['explorer.scene', 'explorer.structure', function(scene, archi) {
	return new TreeManager(scene, archi);
}]);

explorer.controller('explorer.colorsctrl', ['$scope', 'explorer.tree', function($scope, tree){

	$scope.randomise = function () {
		tree.randomiseColors();
	};

	$scope.grayscale = function () {
		tree.setGrayscaleColor();
	};
	$scope.inherit = function() {
		tree.setInheritedColor();
	};
	$scope.showpath = function () {
		tree.showPath();
	};
}]);

explorer.controller('display', ['$scope', 'explorer.scene', function($scope, scene) {
	$scope.scene = scene;

	$scope.incr = function () {
		scene.enable.depth++;
	};

	$scope.decr = function () {
		scene.enable.depth--;
	};
}]);